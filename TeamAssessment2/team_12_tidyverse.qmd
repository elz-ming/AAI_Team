---
title: "Week 10 Lab: Applications of Tidyverse Skills"
from: markdown+emoji
subtitle: AAI1001 -- Data Engineering and Visualization<br>AY24/25 Tri 2 (Assisted by GenAI)<br>Exercise 5 (Teamwork 2)
author:  
  name: Team [Insert your Team ID]
  affiliations: Singapore Institute of Technology
date: 2025-03-11
date-format: "dddd MMM D, YYYY"
format: 
  html: 
    toc: true
    toc-depth: 1
    toc-location: left
    number-sections: true
    number-depth: 3
    embed-resources: true
    html-table-processing: none
---

```{r}
#| label: setup
#| include: false

library(tidyverse)
library(gt)
```


# Converting Football Scores into a League Table (30%)


## Generating a League Table
```{r}
epl_results <- read_csv("epl_results.csv", show_col_types=FALSE) |>
  as_tibble()

epl_teams <- read_csv("epl_teams.csv", show_col_types=FALSE) |>
  as_tibble()
```


## Improving the Visualization Using gt Functions




# Finding and Visualizing a Real-World Data Set (30%)


## Explanation of the Data Set


## Validation of Conditions C, D, and E


## Generating a Scatter Plot Using `geom_point()`

```{r, message=FALSE, warning=FALSE}
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(scales)

# Load the dataset
resale_flats <- read.csv("ResaleFlatPrices/Resale Flat Prices (Based on Approval Date), 1990 - 1999.csv")

# Filter dataset for Ang Mo Kio town and year 1990 only
amk_flats_1990 <- resale_flats %>%
  filter(town == "ANG MO KIO" & grepl("^1990", month))  # Ensure correct format

# Check number of rows after filtering
num_observations <- nrow(amk_flats_1990)
cat("Number of observations (Ang Mo Kio, 1990):", num_observations, "\n")

# Generate scatter plot for Ang Mo Kio resale flats in 1990
ggplot(amk_flats_1990, aes(x = floor_area_sqm, y = resale_price))  # ✅ Correct variable +
  geom_point(alpha = 0.2) +  # Transparency to reduce overplotting
  scale_y_continuous(labels = comma_format()) +  # Format y-axis numbers
  labs(
    title = "Scatter Plot of Floor Area vs. Resale Price (Ang Mo Kio, 1990)",
    x = "Floor Area (sqm)",
    y = "Resale Price (SGD)",
    caption = "Data Source: Singapore Department of Statistics"
  ) +
  theme_minimal()

```


## Producing and Discussing Two Distinct Plots Designed to Mitigate Overplotting

### 1. Scatter Plot with Transparency
```{r}

ggplot(amk_flats, aes(x = floor_area_sqm, y = resale_price)) +
  geom_point(alpha = 0.1) +  # Reduces opacity to show density
  scale_y_continuous(labels = comma_format()) +
  labs(
    title = "Scatter Plot with Transparency (Ang Mo Kio)",
    x = "Floor Area (sqm)",
    y = "Resale Price (SGD)",
    caption = "Data Source: Singapore Department of Statistics"
  ) +
  theme_minimal()
```

### 2. Scatter Plot with Jittering 
```{r}
ggplot(amk_flats, aes(x = floor_area_sqm, y = resale_price)) +
  geom_jitter(width = 2, height = 5000, alpha = 0.2) +  # Adds randomness to spread points
  scale_y_continuous(labels = comma_format()) +
  labs(
    title = "Scatter Plot with Jittering (Ang Mo Kio)",
    x = "Floor Area (sqm)",
    y = "Resale Price (SGD)",
    caption = "Data Source: Singapore Department of Statistics"
  ) +
  theme_minimal()
```



## Creating Two Distinct Smoothing Interpolations



# Visualizing Michelson’s Speed-of-Light Measurements (25%)


## Converting the `Expt` Column to a Factor


## Scatter Plot: Experiment Number versus Measured Speeds


## Creating a Box Plot with One Box per Experiment


## Inserting a Violin Plot into the Box Plot


## Creating a Faceted Plot Displaying Histograms


## Discussion of the Plots



# Reflection on the Use of GenAI (10%)