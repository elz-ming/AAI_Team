---
title: "Singapore Ridership Analysis, by Team 12"
author: 
  - "Chua Zong Han Lionel"
  - "Lin Zhenming"
  - "Nurul Shaidah Binti Mohamed Shaib"
  - "Poh Weh Lin"
  - "Tamo Cholo Rafael Tandoc"
  
date: 2025-03-11
date-format: "dddd MMM DD, YYYY"

format: 
  html:
    embed-resources: true
    number-sections: false
    toc: true
    toc-depth: 2
---

# Step 0 : Setting up
## 0.1 : Importing Libraries
```{r}
#| eval: true
#| echo: true
#| message: false
#| warning: false

library(tidyverse)
library(knitr)
library(readxl)
library(tidyquant)
library(ggplot2)
library(gt)
library(gt)
library(dplyr)

```

```{r}
# TODO 1a: Write a function to display data tables beautifully
# Function to style a data table nicely
style_nice_table <- function(data, title = "Styled Cars", subtitle = NULL) {
  data |>
    gt() |>
    tab_header(
      title = title,
      subtitle = subtitle
    ) |>
    fmt_number(
      columns = where(is.numeric),
      decimals = 2
    ) |>
    tab_style(
      style = cell_text(weight = "bold"),
      locations = cells_column_labels()
    ) |>
    tab_style(
      style = cell_fill(color = "lightblue"),
      locations = cells_column_labels()
    ) |>
    tab_style(
      style = cell_borders(
        sides = c("left", "right", "top", "bottom"),
        color = "black",
        weight = px(1)
      ),
      locations = cells_body()
    ) |>
    tab_options(
      table.font.size = px(14),
      column_labels.font.size = px(16),
      table.width = pct(100)
    ) |>
    tab_footnote(
      footnote = "Data sourced from ridership LTA",
      locations = cells_title(groups = "title")
    )
}

# Example usage
data <- read_csv("data/PublicTransportOperationAndRidershipAnnual.csv") |> head()

styled_table <- style_nice_table(data, title = "Ridership Data", subtitle = "1990-2023 MRT & LRT")
styled_table
```

## 0.2 : Importing Data
### Dataset 1 : Monthly Data
This dataset entails monthly ridership for every month of the year, for 5 years (2019 to 2024)
```{r}
#| eval: true
#| echo: true

# Function to style a data table nicely
style_nice_table <- function(data, title = "Styled Table", subtitle = NULL) {
  data |>
    gt() |>
    tab_header(
      title = title,
      subtitle = subtitle
    ) |>
    fmt_number(
      columns = where(is.numeric),
      decimals = 2
    ) |>
    tab_style(
      style = cell_text(weight = "bold"),
      locations = cells_column_labels()
    ) |>
    tab_style(
      style = cell_fill(color = "lightblue"),
      locations = cells_column_labels()
    ) |>
    tab_style(
      style = cell_borders(
        sides = c("left", "right", "top", "bottom"),
        color = "black",
        weight = px(1)
      ),
      locations = cells_body()
    ) |>
    tab_options(
      table.font.size = px(14),
      column_labels.font.size = px(16),
      table.width = pct(100)
    ) |>
    tab_footnote(
      footnote = "Data sourced from LTA",
      locations = cells_title(groups = "title")
    )
}

# Load the monthly data from the CSV file
monthly_data <- read_csv("Data/monthly_ave_daily_pt_ridership.csv", show_col_types = FALSE) |>
  as_tibble()

# Print the first 10 rows of the raw data
print(monthly_data, n = 10)

# Use the styling function to display the monthly data beautifully
styled_table <- style_nice_table(
  data = monthly_data,
  title = "Monthly Average Daily Public Transport Ridership",
  subtitle = "Dataset: monthly_ave_daily_pt_ridership.csv"
)

# Display the styled table
styled_table
```


### Dataset 2 : Yearly Data
This dataset entails yearly ridership for for 33 years (1990 to 2023)
```{r}
#| eval: true
#| echo: true

yearly_data <- read_csv("Data/PublicTransportOperationAndRidershipAnnual.csv", show_col_types=FALSE) |>
  as_tibble()
print(yearly_data, n=10)
# TODO 1c: Use the function in 1a to display the yearly data beautifully
```

# Step 1 : Data Cleaning and Engineering

## Cleaning Monthly Data

- **Splitting "month" Column into Separate "Month" and "Year" Columns**
  - The **"month"** column contains combined **month-year** values (e.g., `Jan-19`).
  - This step **separates** the **month** and **year** into two distinct columns to facilitate time-based analysis.

```{r}
#| eval: true
#| echo: true

# TODO 2a: Clean the monthly data, and display them
monthly_data <- monthly_data %>%
  separate(month, into = c("month", "year"), sep = "-", convert = TRUE)
kable(head(monthly_data))
```

## Cleaning Yearly Data
- **Transpose Table for Better Readability and Analysis**
  - Convert dataset from **wide** to **long** format.
  - Extract the **first row as column names** and remove it.
  - Convert **Year column** to numeric.
```{r}
#| eval: true
#| echo: true

# TODO 2b: Clean the yearly data, and display them
yearly_data <- t(yearly_data)
yearly_data <- as.data.frame(yearly_data)
colnames(yearly_data) <- yearly_data[1, ]
yearly_data <- yearly_data[-1, ]
yearly_data$Year <- as.numeric(rownames(yearly_data))
```
- **Filter Data from 2018 Onwards and Reorganize Columns**
  - Remove records before **2018** to deal with missing data.
  - Reset row names and relocate **Year column** to the first position.
```{r}
#| eval: true
#| echo: true

yearly_data <- yearly_data[yearly_data$Year >= 2018, ]
rownames(yearly_data) <- NULL
yearly_data <- yearly_data %>% relocate(Year, .before = everything())
yearly_data <- yearly_data %>% rename(`Average Daily Trip - P2P` = `Average Daily Trip - Point-To-Point (P2P) Transport (Taxis And Private Hire Cars)`)
```
- **Convert Ridership Data and MRT/LRT km Operated Data from Thousands to Actual Values**
  - Multiply relevant columns by **1000**.
```{r}
#| eval: true
#| echo: true

# Identify columns to multiply by 1000
columns_to_multiply <- c("MRT km Operated", 
                         "LRT km Operated",
                         "Average Daily Ridership - MRT", 
                         "Average Daily Ridership - LRT", 
                         "Average Daily Ridership - Public Bus", 
                         "Average Daily Trip - P2P")

# Convert these columns to numeric and multiply by 1000
for (col in columns_to_multiply) {
  yearly_data[[col]] <- as.numeric(yearly_data[[col]]) * 1000
}

kable(head(yearly_data))
```
## Joining Data
```{r}
#| eval: true
#| echo: true

# TODO 2c: Join both tables after cleaning
```



# Step 2 : Generate the Improved Visualization
## 1.1 Old Visualization
::: {#fig1 style="text-align: center;"}
![Figure 1: Original Visualization from the Straits Times (2025)](Data/figure_2.png){width=70%}
:::
```{r}
#| eval: true
#| echo: true

# TODO 3a: Replace the image with .png file and change the display code to use .png file
```

## 2.2 Improved Visualization
```{r}
#| eval: true
#| echo: true

# TODO 3b: Create the Sparkline visualization
```

# Step 3 : Data Analysis
## 3.1 Monthly Ridership Analysis
```{r}
#| eval: true
#| echo: true

# TODO 4: Data analysis using monhtly data
```

## 3.2 Infrastructure Expansion Correlation
```{r}
#| eval: true
#| echo: true

# TODO 5: Data analysis using yearly data
```

## 3.3 Impact of Alternative Transport Modes
```{r}
#| eval: true
#| echo: true

# TODO 6: Data analysis using yearly data
```

## 3.4 Time Series Analysis
```{r}
#| eval: true
#| echo: true

# TODO 7: Data analysis using monthly data
```

